"use strict";(self.webpackChunkrh_ocp=self.webpackChunkrh_ocp||[]).push([[3847],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,k=d["".concat(s,".").concat(u)]||d[u]||c[u]||o;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(7462),r=a(7294),o=a(6010),i=a(2389),l=a(7392),s=a(7094),p=a(2466);const m="tabList__CuJ",d="tabItem_LNqP";function c(e){const{lazy:t,block:a,defaultValue:i,values:c,groupId:u,className:k}=e,N=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=c??N.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,l.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===i?i:i??N.find((e=>e.props.default))?.props.value??N[0].props.value;if(null!==f&&!g.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:w}=(0,s.U)(),[v,y]=(0,r.useState)(f),C=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=u){const e=b[u];null!=e&&e!==v&&g.some((t=>t.value===e))&&y(e)}const I=e=>{const t=e.currentTarget,a=C.indexOf(t),n=g[a].value;n!==v&&(S(t),y(n),null!=u&&w(u,String(n)))},M=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const a=C.indexOf(e.currentTarget)+1;t=C[a]??C[0];break}case"ArrowLeft":{const a=C.indexOf(e.currentTarget)-1;t=C[a]??C[C.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},k)},g.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>C.push(e),onKeyDown:M,onClick:I},i,{className:(0,o.Z)("tabs__item",d,i?.className,{"tabs__item--active":v===t})}),a??t)}))),t?(0,r.cloneElement)(N.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},N.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function u(e){const t=(0,i.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},6791:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),o=a(5488),i=a(5162);const l={title:"Foundation",lastupdate:"git",lastupdateauthor:"git"},s="Nutanix Foundation",p={unversionedId:"diyfoundation/diyfoundation",id:"diyfoundation/diyfoundation",title:"Foundation",description:"Overview",source:"@site/docs/diyfoundation/diyfoundation.md",sourceDirName:"diyfoundation",slug:"/diyfoundation/",permalink:"/rh-ocp/diyfoundation/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/diyfoundation/diyfoundation.md",tags:[],version:"current",lastUpdatedBy:"Nutanix Japan",lastUpdatedAt:1673858006,formattedLastUpdatedAt:"Jan 16, 2023",frontMatter:{title:"Foundation",lastupdate:"git",lastupdateauthor:"git"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/rh-ocp/"},next:{title:"PC Deployment",permalink:"/rh-ocp/pcdeploy/"}},m={},d=[{value:"Overview",id:"overview",level:2},{value:"DIY Environment",id:"diy-environment",level:2},{value:"Confirm the Number of SSDs",id:"confirm-the-number-of-ssds",level:2},{value:"Create Node D Cluster",id:"create-node-d-cluster",level:2},{value:"Install Foundation VM",id:"install-foundation-vm",level:2},{value:"Config Foundation VM",id:"config-foundation-vm",level:2},{value:"Foundation Node ABC cluster",id:"foundation-node-abc-cluster",level:2},{value:"Takeaways",id:"takeaways",level:2}],c={toc:d};function u(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nutanix-foundation"},"Nutanix Foundation"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Estimated time to complete: ",(0,r.kt)("strong",{parentName:"p"},"60 Minutes"))),(0,r.kt)("p",null,"Foundation is used to automate the installation of the hypervisor and\nController VM on one or more nodes. In this exercise you will practice\nimaging a physical cluster with Foundation. In order to keep the lab\nself-contained, you will create a single node cluster on which you\nwill deploy your Foundation VM. That Foundation instance will be used to\nimage and create a cluster from the remaining 3 nodes in the Block."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"In following steps, you should replace xx part of the IP octet with your assigned cluster ID")),(0,r.kt)("h2",{id:"diy-environment"},"DIY Environment"),(0,r.kt)("p",null,"A Hosted POC reservation provides a fully imaged cluster consisting of 4\nnodes. To keep the lab self-contained within a single, physical block,\nyou will:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Destroy the existing cluster"),(0,r.kt)("li",{parentName:"ul"},"Confirm the number of SSDs"),(0,r.kt)("li",{parentName:"ul"},"Create a single node cluster using Node D"),(0,r.kt)("li",{parentName:"ul"},"Install the Foundation VM on Node D"),(0,r.kt)("li",{parentName:"ul"},"Use Foundation VM to image Nodes A, B, and C and create a 3 node\ncluster")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Using an SSH client, connect to the ",(0,r.kt)("strong",{parentName:"p"},"Node D CVM IP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"10.42.xx.32")," in your assigned block using the following credentials:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Username")," - nutanix"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Password")," - ",(0,r.kt)("em",{parentName:"li"},"check password in RX"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Login to the console of  NodeD CVM"',title:'"Login',to:!0,the:!0,console:!0,of:!0,"":!0,NodeD:!0,'CVM"':!0},"ssh -l nutanix 10.42.xx.32         # password: <check password in RX>\n")),(0,r.kt)("p",{parentName:"li"},"Execute the following commands to power off any running VMs on the cluster, stop cluster services, and destroy the existing cluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cluster stop        # Enter 'I agree' when prompted to proceed\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cluster destroy     # Enter 'Y' when prompted to proceed\n")))),(0,r.kt)("p",null,"Once you have made sure that all VMs and services are stopped, you can proceed to the next steps. "),(0,r.kt)("h2",{id:"confirm-the-number-of-ssds"},"Confirm the Number of SSDs"),(0,r.kt)("p",null,"In this section we will confirm the number of SSDs in your node D. This will determine which command we will use in the next section."),(0,r.kt)("p",null,"It is likely that all nodes in HPOC cluster will have similar SSD and HDD combination."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Login to the CVM to find out the SSD configuration details"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Login to the console of  NodeD CVM"',title:'"Login',to:!0,the:!0,console:!0,of:!0,"":!0,NodeD:!0,'CVM"':!0},"ssh -l nutanix 10.42.xx.32         # password: <check password in RX>\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"lsscsi \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",1:!0,className:"language-bash",metastring:'title="Example output with 1 SSD here"',title:'"Example',output:!0,with:!0,SSD:!0,'here"':!0},"[0:0:0:0]    disk    ATA      INTEL SSDSC2BX80 0140  /dev/sda  # << SSD 1\n[0:0:1:0]    disk    ATA      INTEL SSDSC2BX80 0140  /dev/sdb  # << SSD 2\n[0:0:2:0]    disk    ATA      ST91000640NS     SN03  /dev/sdc \n[0:0:3:0]    disk    ATA      ST91000640NS     SN03  /dev/sdd \n[0:0:4:0]    disk    ATA      ST91000640NS     SN03  /dev/sde \n[0:0:5:0]    disk    ATA      ST91000640NS     SN03  /dev/sdf \n[2:0:0:0]    cd/dvd  QEMU     QEMU DVD-ROM     2.5+  /dev/sr0\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",2:!0,className:"language-bash",metastring:'title="Example output with 2 SSDs here"',title:'"Example',output:!0,with:!0,SSDs:!0,'here"':!0},"[0:0:0:0]    disk    ATA      INTEL SSDSC2BX80 0140  /dev/sda  # << SSD 1\n[0:0:2:0]    disk    ATA      ST91000640NS     SN03  /dev/sdc \n[0:0:3:0]    disk    ATA      ST91000640NS     SN03  /dev/sdd \n[0:0:4:0]    disk    ATA      ST91000640NS     SN03  /dev/sde \n[0:0:5:0]    disk    ATA      ST91000640NS     SN03  /dev/sdf \n[2:0:0:0]    cd/dvd  QEMU     QEMU DVD-ROM     2.5+  /dev/sr0\n")))),(0,r.kt)("p",null,"After confirming the number of SSDs choose the appropriate cluster\nformation script in the next section."),(0,r.kt)("h2",{id:"create-node-d-cluster"},"Create Node D Cluster"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Remaining in SSH client, access Node-D CVM and execute following commands"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Login to the console of Node D CVM"',title:'"Login',to:!0,the:!0,console:!0,of:!0,Node:!0,D:!0,'CVM"':!0},"ssh -l nutanix 10.42.xx.32 # password: <check password in RX>\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Confirm if your hardware nodes have 1 or more SSD and create your cluster")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"2 SSDs are required to privide RF2 redundancy factor in a Nutanix cluster"),(0,r.kt)("p",{parentName:"li"},"If we have only 1 SSD in our nodes as confirmed from the previous step, we are good to have RF1 as a redundancy factor."),(0,r.kt)(o.Z,{groupId:"Determine SSD",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"2 SSDs Node",label:"2 SSDs Node",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cluster -s 10.42.xx.32 create # Enter 'Y' when prompted to proceed\n"))),(0,r.kt)(i.Z,{value:"1 SSD Node",label:"1 SSD Node",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cluster -s 10.42.xx.32 --redundancy_factor=1 create # Enter 'Y' when prompted to proceed\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After the single node cluster is formed, run the following commands\nto configure it"),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The above command will create a ",(0,r.kt)("inlineCode",{parentName:"p"},"cluster")," from a single node using RF1, offering no redundancy to recover from hardware failure."),(0,r.kt)("p",{parentName:"admonition"},"This configuration is being used for non-production, instructional purposes and should ",(0,r.kt)("strong",{parentName:"p"},"NEVER")," be used for a customer deployment (unless the hosted application stores two copies of the same data\ne.g. Splunk). This should be agreed with the customer."),(0,r.kt)("p",{parentName:"admonition"},"After the ",(0,r.kt)("inlineCode",{parentName:"p"},"cluster")," is created, Prism will reflect Critical Health status due to lack of redundancy.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ncli cluster edit-params new-name=POCxx-D\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ncli cluster add-to-name-servers servers=10.42.196.10\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ncli user reset-password user-name='admin' password=<check password in RX> \n")))),(0,r.kt)("h2",{id:"install-foundation-vm"},"Install Foundation VM"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"https://<Node D CVM IP:9440")," (",(0,r.kt)("a",{parentName:"p",href:"https://10.42.xx.32:9440"},"https://10.42.xx.32:9440"),") in your browser and log in with the following credentials:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Username")," - admin"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Password")," - check password in RX"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Accept the EULA and Pulse prompts.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("strong",{parentName:"p"},"Prism > Storage > Table > Storage Pool"),", select default storage pool and click update, then rename it to ",(0,r.kt)("em",{parentName:"p"},"SP01"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Check if there is a container named ",(0,r.kt)("em",{parentName:"p"},"Images"),", if not, Click ",(0,r.kt)("strong",{parentName:"p"},"+ Storage Container")," to create a new container named ",(0,r.kt)("em",{parentName:"p"},"Images")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(272).Z,width:"589",height:"350"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to configuration :fontawesome-solid-gear: (Settings) page and navigate to ",(0,r.kt)("strong",{parentName:"p"},"Image Configuration"),", click ",(0,r.kt)("strong",{parentName:"p"},"+Upload Image"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill out the following fields and click ",(0,r.kt)("strong",{parentName:"p"},"Save"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name")," - Foundation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Image Type")," - Disk"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Storage Container")," Images"),(0,r.kt)("li",{parentName:"ul"},"Select ",(0,r.kt)("strong",{parentName:"li"},"From URL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Image Source")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"http://10.42.194.11/images/Foundation/Foundation_VM-5.2-disk-0.qcow2"))),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"At the time of writing, Foundation 5.2 is the latest available version. The URL for the latest Foundation VM QCOW2 image can be downloaded from the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.nutanix.com/#/page/foundation"},"Nutanix Portal"),"."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Unless otherwise directed by support, always use the latest version of Foundation in a field installation.")),(0,r.kt)("p",{parentName:"admonition"},"For the puposes of this lab, the Foundation VM image is stored in a HPOC file server")))),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to configuration page and navigate to ",(0,r.kt)("strong",{parentName:"p"},"Network Config"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Before creating the VM, we must first create a virtual network to\nassign to the Foundation VM. The network will use the Native VLAN\nassigned to the physical uplinks for all 4 nodes in the block.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the Prism Element UI click :fontawesome-solid-gear: > ",(0,r.kt)("strong",{parentName:"p"},"Network Configuration > Networks > Create Network"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill out the following fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name")," - Primary"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"VLAN ID")," - 0"),(0,r.kt)("li",{parentName:"ul"},"Enable IP address management - leave it unselected")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(7866).Z,width:"841",height:"405"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Save"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("strong",{parentName:"p"},"Prism > VM > Table")," and click ",(0,r.kt)("strong",{parentName:"p"},"+ Create VM"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill out the following fields"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name")," - Foundation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"vCPU(s)")," - 2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Number of Cores per vCPU")," - 1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Memory")," - 8 Gi")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(3998).Z,width:"589",height:"712"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("strong",{parentName:"p"},"+ Add New Disk")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Operation")," - Clone from Image Service"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Image")," - Foundation"),(0,r.kt)("li",{parentName:"ul"},"Select ",(0,r.kt)("strong",{parentName:"li"},"Add"))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(9676).Z,width:"589",height:"656"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("strong",{parentName:"p"},"Add New NIC")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"VLAN Name")," - Primary"),(0,r.kt)("li",{parentName:"ul"},"Select ",(0,r.kt)("strong",{parentName:"li"},"Add"))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(7831).Z,width:"490",height:"366"})),(0,r.kt)("p",{parentName:"li"},"Once NIC is added, you should see the NIC configuration in the VM\ncreate window as shown here"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(9926).Z,width:"483",height:"169"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Save")))),(0,r.kt)("h2",{id:"config-foundation-vm"},"Config Foundation VM"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select your ",(0,r.kt)("strong",{parentName:"p"},"Foundation")," VM and click ",(0,r.kt)("strong",{parentName:"p"},"Power on"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Once the VM has started, click ",(0,r.kt)("strong",{parentName:"p"},"Launch Console"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Once the VM has finished booting, return to Prism element and note\ndown the IP address of the Foundation VM.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Prism Element > ",(0,r.kt)("strong",{parentName:"p"},"VM")," > ",(0,r.kt)("strong",{parentName:"p"},"Table")," > ",(0,r.kt)("strong",{parentName:"p"},"Foundation VM")," > ",(0,r.kt)("strong",{parentName:"p"},"NICs")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:a(8678).Z,width:"1165",height:"977"})),(0,r.kt)("p",{parentName:"li"},"!!!caution\nThe IP address is received from the Primary network default DHCP pool. Your Foundation VM\\'s IP address will be different."))),(0,r.kt)("h2",{id:"foundation-node-abc-cluster"},"Foundation Node ABC cluster"),(0,r.kt)("p",null,"!!!note\nWe will do this section of the lab from your desktop (Windows or Mac) computer. This is the fastest way as remote consoles will be slow."),(0,r.kt)("p",null,"By default, Foundation does not have any AOS or hypervisor images. You can download your desired AOS package from the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.nutanix.com/#/page/releases/nosDetails"},"Nutanix Portal"),"."),(0,r.kt)("p",null,"If downloading the AOS package within the Foundation VM, the ",(0,r.kt)("inlineCode",{parentName:"p"},".tar.gz")," package can also be moved to ",(0,r.kt)("inlineCode",{parentName:"p"},"~/foundation/nos")," rather than uploaded to Foundation through the web UI."),(0,r.kt)("p",null,"To shorten the lab time, we use command line to access foundation VM and download NOS binary to designated folder in it."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open a terminal in your desktop computer (Putty or Mac Terminal) and ssh to ",(0,r.kt)("strong",{parentName:"p"},"Foundation VM")," through foundation IP ",(0,r.kt)("inlineCode",{parentName:"p"},"10.42.xx.45")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Login to the console of Foundation VM"',title:'"Login',to:!0,the:!0,console:!0,of:!0,Foundation:!0,'VM"':!0},"ssh -l nutanix <Foundation VM IP>  # provide default password \n# example\n# ssh -l nutanix 10.42.xx.51     \n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd foundation\ncd nos\ncurl -O http://10.42.194.11/images/AOS/5.20.3/nutanix_installer_package-release-euphrates-5.20.3-stable-x86_64.tar\n")),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"When you see ",(0,r.kt)("strong",{parentName:"p"},"100%")," finished status, AOS 5.20.3 package has been downloaded to ",(0,r.kt)("inlineCode",{parentName:"p"},"~/foundation/nos")," folder."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"From you desktop computer, open Google Chrome browser and navigate to Foundation VM's IP")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Access Foundation UI via any browser at ",(0,r.kt)("inlineCode",{parentName:"p"},"http://<Foundation VM IP>"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill the following fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Select your hardware platform"),": Autodetect"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Netmask of Every Host and CVM")," - 255.255.255.128"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Gateway of Every Host and CVM")," - 10.42.xx.1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Gateway of Every IPMI")," - 10.42.xx.1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Netmask of Every IPMI")," - 255.255.255.128"),(0,r.kt)("li",{parentName:"ul"},"Under ",(0,r.kt)("strong",{parentName:"li"},"Double-check this installer's networking step")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Skip this Validation")," - selected")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(7331).Z,width:"1032",height:"1330"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In new foundation page, Tools menu choose ",(0,r.kt)("strong",{parentName:"p"},"Remove Unselected Rows")," to clear all auto discovered nodes"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(9215).Z,width:"992",height:"332"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Add nodes manually")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(741).Z,width:"981",height:"186"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill in block information, fill in the following information:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Number of blocks")," - 1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Number of nodes")," - 3"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"How should these nodes be reached?")," - choose ",(0,r.kt)("strong",{parentName:"li"},"I will provide the IPMI's MACs")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Add")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(2516).Z,width:"417",height:"523"})),(0,r.kt)("admonition",{parentName:"li",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Foundation will automatically discover any hosts in the same IPv6 Link Local broadcast domain that is not already part of a cluster. "),(0,r.kt)("p",{parentName:"admonition"},"When transferring POC assets in the field, it's not uncommon to receive a cluster that wasn't properly destroyed at the conclusion of the previous POC. In that case, the nodes are already part of existing clusters and will not be discovered. "),(0,r.kt)("p",{parentName:"admonition"},"In this lab, we choose manually specify the MAC address instead in order to practice as the real world.")),(0,r.kt)("admonition",{parentName:"li",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"There are at least 2 methods to get MAC address remotely."),(0,r.kt)("p",{parentName:"admonition"},"Method.1: Identify IPMI MAC Address (BMC MAC address) of Nodes (A, B, and C) by accessing IPMI IP in a browser for each node "),(0,r.kt)("p",{parentName:"admonition"},"Method.2 Identify IPMI MAC Address of Nodes (A, B, C) by login AHV host with User: root, Password: ",(0,r.kt)("em",{parentName:"p"},"default")," for each node and using the following commands: "),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -l root <IP address of Host/Hypervisor>\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'ipmitool lan print | grep "MAC Address" \n')),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# output here \nMAC Address             : 0c:c4:7a:3c:c9:ad\n# repeat for nodes B and C for unique IPMI MAC addresses\n")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Access Node A IPMI through IP 10.42.xx.33 with ADMIN/ADMIN"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(4079).Z,width:"529",height:"325"})),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(2092).Z,width:"1179",height:"597"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Record your NODE A/B/C BMC MAC address (in above example , it is ",(0,r.kt)("strong",{parentName:"p"},"ac:1f:6b:1e:95:eb")," )"),(0,r.kt)("p",{parentName:"li"},"Doing the same with your other 2 nodes B/C, access Node B and C IPMI through IP 10.42.xx.34/35 with ADMIN/ADMIN, record all 3 BMC MAC addresses.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Tools")," and select ",(0,r.kt)("strong",{parentName:"p"},"Range Autofill")," from the drop down list")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Replacing the octet(s) that correspond to your HPOC network, fill out the ",(0,r.kt)("strong",{parentName:"p"},"top row")," fields with the following details:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IPMI MAC")," - the three your just recorded down"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"IPMI IP")," - 10.42.xx.33"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hypervisor IP")," - 10.42.xx.25"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CVM IP")," - 10.42.xx.29"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"HOSTNAME OF HOST")," -- POCxx-A")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(8726).Z,width:"965",height:"287"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the ",(0,r.kt)("strong",{parentName:"p"},"Cluster")," page, fill the following details:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cluster Name")," - POCxx-ABC"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Timezone of Every Hypervisor and CVM")," - America/Phoenix"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cluster Redundancy Factor")," - RF2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cluster Virtual IP")," - 10.42.xx.37"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NTP Servers of Every Hypervisor and CVM")," - 0.pool.ntp.org,1.pool.ntp.org,2.pool.ntp.org,3.pool.ntp.org"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"DNS Servers of Every Hypervisor and CVM")," - 10.42.196.10"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"vRAM Allocation for Every CVM, in Gigabytes")," - 32")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(9119).Z,width:"555",height:"996"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Select an AOS installer")," - Select your uploaded (through\ncommand line in previous steps)\n",(0,r.kt)("em",{parentName:"li"},"nutanix_installer_package-release-","*",".tar.gz")," file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Arguments to the AOS Installer (Optional)")," - leave blank")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(182).Z,width:"668",height:"326"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill out the following fields and click ",(0,r.kt)("strong",{parentName:"p"},"Next"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Select a hypervisor installer")," - AHV, AHV installer bundled inside the AOS installer")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(9049).Z,width:"667",height:"229"})),(0,r.kt)("p",{parentName:"li"},"!!!tip\nEvery AOS release contains a version of AHV bundle with that release.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the existing IPMI credentials as ",(0,r.kt)("strong",{parentName:"p"},"ADMIN")," and ",(0,r.kt)("strong",{parentName:"p"},"ADMIN")," for all three nodes. Note that this will be different in the field."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(8808).Z,width:"661",height:"245"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Start"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Confirm that the installer will be active by clicking on ",(0,r.kt)("strong",{parentName:"p"},"Won't Sleep")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(7349).Z,width:"310",height:"142"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the ",(0,r.kt)("strong",{parentName:"p"},"Warning of Data Loss Possibility")," window, click on ",(0,r.kt)("strong",{parentName:"p"},"Ignore and Re-image")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(835).Z,width:"319",height:"311"})),(0,r.kt)("p",{parentName:"li"},"Foundation will run a couple of tests to make sure all the configuration details you have provided are correct and then direct you the installation progress page.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click the ",(0,r.kt)("strong",{parentName:"p"},"Log")," link to view the realtime log output from your node."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(6276).Z,width:"972",height:"501"})),(0,r.kt)("p",{parentName:"li"},"When all CVMs are ready, Foundation initiates the cluster creation process.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Monitor the foundation process until completion"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(5055).Z,width:"967",height:"495"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Once Foundation finishes successully, either click on ",(0,r.kt)("strong",{parentName:"p"},"Click here"),"\nlink as shown above or open ",(0,r.kt)("inlineCode",{parentName:"p"},"https://<Cluster Virtual IP>:9440")," (10.42.xx.37)in your browser")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Log in with the following credentials:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Username")," - admin"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Password")," - ",(0,r.kt)("em",{parentName:"li"},"default")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Change the Password")," - ",(0,r.kt)("em",{parentName:"li"},"check password in RX"))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"image",src:a(950).Z,width:"650",height:"364"})))),(0,r.kt)("h2",{id:"takeaways"},"Takeaways"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You have successfully prepared your environment in a single operation called Foundation:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Installed Hypervisor (AHV) - This can also be ESXi or Hyper V"),(0,r.kt)("li",{parentName:"ul"},"Installed CVM (AOS)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Distributed File System (Data Plane)"),(0,r.kt)("li",{parentName:"ul"},"Prism Element (Control Plane)")))))))}u.isMDXComponent=!0},9119:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/foundation-cluster-config-7b101e5cf13b5ae6c1795b9bcdbdbd08.png"},8678:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/foundation-vm-ip-be937d29e1c8a11d82ff039bdf8cfddd.png"},272:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image001-572553b8fa887d8e428dd5b9eeef6b7b.png"},7866:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image002-network-91ff6bc923a344cd099f8d92bbb89760.png"},3998:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image003-18eb54bad09ca781ce41e535cfd134bb.png"},9676:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image004-e01d64655556eed4fbe743b7cedd96d8.png"},7831:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image005-network-1-3240b458c531fe103125e30fddc5624b.png"},9926:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image005-network-2-d7a9b074f40659a140639224706d61c4.png"},7331:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image014-30e044801a249414aacfcc0d851e6503.png"},741:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image0141-b7df8c5e981fdfd6bae43ed90429f754.png"},9049:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image020-dbae9f547fb654a4afe216e34550c743.png"},7349:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image021-confirm-2821dd4bb240aaa34e9b03b5e8081f6b.png"},835:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image021-ignore-warning-df1eb2463efbfbbfd5d5ba44dbd0b6a5.png"},8808:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image021-8a1218da95dffc20e811dcf0a5c5632a.png"},6276:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image022-87471931f4d1148a2732190faf5e1e5a.png"},5055:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image023-9542f46a0a8934d8e7caa0a9f3f279a1.png"},950:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image024-b1428caf3c1f5b91cddcb67ab5ffc453.png"},4079:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image101-a92ff38183dd64e46eaf81cf2b47fe2b.png"},2092:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image102-f608fdaeaf3571a7d6426448ca315e46.png"},2516:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image104-e4440929e3818e481fd7c91bdb24a03c.png"},8726:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image105-4183085aa55e430debb3fb94884709a8.png"},182:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image106-32b3d232b97ef3c2dc2eebe90c80de50.png"},9215:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/remove-nodes-4e443361f384082ed209e3b17eb87145.png"}}]);